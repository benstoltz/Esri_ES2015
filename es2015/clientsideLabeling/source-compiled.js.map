{"version":3,"sources":["source.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAWA,QAAI,IAAI,GAAG,uBAAW,EAAC,MAAM,EAAC,CAAC,OAAO,EAAC,MAAM,EAAC,CAAC,MAAM,EAAC,MAAM,EAAC,OAAO,EAAC,MAAM,EAAC,OAAO,EAAC,kBAAkB,EAAC,EAAC,MAAM,EAAC,MAAM,EAAC,EAAC,CAAC,CAAC;;AAEzH,QAAI,GAAG,GAAG,oBAAQ,KAAK,EAAE;AACrB,cAAM,EAAE,IAAI;KACf,CAAC,CAAC;;AAEH,QAAI,UAAU,GAAG,YAAY,CAAC;;;AAG9B,QAAI,WAAW,GAAG,sBAAU,MAAM,CAAC,CAAC;AACpC,QAAI,UAAU,GAAG,iCAAqB,OAAO,EAAE,WAAW,EAAE,GAAG,CAAC,CAAC;AACjE,QAAI,YAAY,GAAG,iCAAqB,OAAO,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;AACnE,QAAI,cAAc,GAAG,+BAAmB,YAAY,CAAC,CAAC;;AAEtD,QAAI,SAAS,GAAG,+EAA+E,CAAC;AAChG,QAAI,MAAM,GAAG,6BAAiB,SAAS,EAAE;AACrC,UAAE,EAAE,QAAQ;AACZ,iBAAS,EAAE,CAAC,UAAU,CAAC;KAC1B,CAAC,CAAC;;AAEH,UAAM,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;AACnC,OAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;;;AAGrB,QAAI,WAAW,GAAG,4BAAgB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;AACzD,eAAW,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACjC,eAAW,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;AACpC,QAAI,mBAAmB,GAAG,+BAAmB,WAAW,CAAC,CAAC;AAC1D,QAAI,MAAM,GAAG,2BAAe,EAAC,EAAE,EAAE,QAAQ,EAAC,CAAC,CAAC;;AAE5C,UAAM,CAAC,eAAe,CAAC,MAAM,EAAE,mBAAmB,EAAE,GAAG,GAAG,UAAU,GAAG,GAAG,CAAC,CAAC;AAC5E,OAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;;;AAGrB,QAAI,WAAW,GAAG,sBAAU,MAAM,CAAC,CAAC;AACpC,QAAI,SAAS,GAAG,iCAAqB,OAAO,EAAE,sBAAU,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;AACpE,QAAI,SAAS,GAAG,uFAAuF,CAAC;AACxG,QAAI,MAAM,GAAG,6BAAiB,SAAS,EAAE,EAAE,IAAI,EAAE,yBAAa,aAAa,EAAE,SAAS,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;AACzG,UAAM,CAAC,uBAAuB,CAAC,cAAc,CAAC,CAAC;;AAE/C,QAAI,cAAc,GAAG,+BAAmB,mCAAuB,OAAO,EAAE,EAAE,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC,CAAC;AACrG,UAAM,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;AACnC,OAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;;;;AAKrB,QAAI,YAAY,GAAG,4BAAgB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;AAC1D,gBAAY,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AAClC,gBAAY,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;AACrC,gBAAY,CAAC,OAAO,GAAG,CAAC,CAAC;AACzB,UAAM,CAAC,eAAe,CAAC,MAAM,EAAE,+BAAmB,YAAY,CAAC,EAAE,aAAa,CAAC,CAAC","file":"source-compiled.js","sourcesContent":["import Map from \"esri/map\";\r\nimport Extent from \"esri/geometry/Extent\";\r\nimport FeatureLayer from \"esri/layers/FeatureLayer\";\r\nimport SimpleLineSymbol from \"esri/symbols/SimpleLineSymbol\";\r\nimport SimpleFillSymbol from \"esri/symbols/SimpleFillSymbol\";\r\nimport SimpleMarkerSymbol from \"esri/symbols/SimpleMarkerSymbol\";\r\nimport TextSymbol from \"esri/symbols/TextSymbol\";\r\nimport SimpleRenderer from \"esri/renderers/SimpleRenderer\";\r\nimport LabelLayer from \"esri/layers/LabelLayer\";\r\nimport Color from \"dojo/_base/Color\";\r\n\r\nlet bbox = new Extent({\"xmin\":-1940058,\"ymin\":-814715,\"xmax\":1683105,\"ymax\":1446096,\"spatialReference\":{\"wkid\":102003}});\r\n\r\nlet map = new Map(\"map\", {\r\n    extent: bbox\r\n});\r\n\r\nlet labelField = \"STATE_NAME\";\r\n\r\n// States Feature Layer\r\nlet statesColor = new Color(\"#666\");\r\nlet statesLine = new SimpleLineSymbol(\"solid\", statesColor, 1.5);\r\nlet statesSymbol = new SimpleFillSymbol(\"solid\", statesLine, null);\r\nlet statesRenderer = new SimpleRenderer(statesSymbol);\r\n\r\nlet statesURL = \"http://sampleserver6.arcgisonline.com/arcgis/rest/services/Census/MapServer/3\";\r\nlet states = new FeatureLayer(statesURL, {\r\n    id: \"states\",\r\n    outFields: [labelField]\r\n});\r\n\r\nstates.setRenderer(statesRenderer);\r\nmap.addLayer(states);\r\n\r\n// States name Label\r\nlet statesLabel = new TextSymbol().setColor(statesColor);\r\nstatesLabel.font.setSize(\"14pt\");\r\nstatesLabel.font.setFamily(\"arial\");\r\nlet statesLabelRenderer = new SimpleRenderer(statesLabel);\r\nlet labels = new LabelLayer({id: \"labels\"});\r\n\r\nlabels.addFeatureLayer(states, statesLabelRenderer, \"{\" + labelField + \"}\");\r\nmap.addLayer(labels);\r\n\r\n// Cities Feature Layer\r\nlet citiesColor = new Color(\"#444\");\r\nlet whiteLine = new SimpleLineSymbol(\"solid\", new Color(\"#fff\"), 2);\r\nlet citiesUrl = \"http://sampleserver6.arcgisonline.com/arcgis/rest/services/WorldTimeZones/MapServer/0\";\r\nlet cities = new FeatureLayer(citiesUrl, { mode: FeatureLayer.MODE_ONDEMAND, outFields: [\"CITY_NAME\"] });\r\ncities.setDefinitionExpression(\"POP_RANK < 3\");\r\n\r\nlet citiesRenderer = new SimpleRenderer(new SimpleMarkerSymbol(\"solid\", 10, whiteLine, citiesColor));\r\ncities.setRenderer(citiesRenderer);\r\nmap.addLayer(cities);\r\n\r\n\r\n// Label Cities\r\n\r\nlet citiesSymbol = new TextSymbol().setColor(citiesColor);\r\ncitiesSymbol.font.setSize(\"18pt\");\r\ncitiesSymbol.font.setFamily(\"arial\");\r\ncitiesSymbol.yoffset = 4;\r\nlabels.addFeatureLayer(cities, new SimpleRenderer(citiesSymbol), \"{CITY_NAME}\");"]}